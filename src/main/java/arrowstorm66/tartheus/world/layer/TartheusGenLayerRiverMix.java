package arrowstorm66.tartheus.world.layer;

import arrowstorm66.tartheus.MBiomes;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;

public class TartheusGenLayerRiverMix extends GenLayer {

	private GenLayer biomeLayer;
	private GenLayer borderLayer;

	public TartheusGenLayerRiverMix(long par1, GenLayer par3GenLayer, GenLayer par4GenLayer) {
		super(par1);
		this.biomeLayer = par3GenLayer;
		this.borderLayer = par4GenLayer;
	}

	/**
	 * Initialize layer's local worldGenSeed based on its own baseSeed and the world's global seed (passed in as an
	 * argument).
	 */
	@Override
	public void initWorldGenSeed(long par1) {
		this.biomeLayer.initWorldGenSeed(par1);
		this.borderLayer.initWorldGenSeed(par1);
		super.initWorldGenSeed(par1);
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be
	 * interpreted as temperatures, rainfall amounts, or biomeList[] indices
	 * based on the particular GenLayer subclass.
	 */
	@Override
	public int[] getInts(int x, int z, int width, int depth) {

		int[] biomeInputs = this.biomeLayer.getInts(x, z, width, depth);
		int[] riverInputs = this.borderLayer.getInts(x, z, width, depth);
		int[] outputs = IntCache.getIntCache(width * depth);

		int stream = Biome.getIdForBiome(MBiomes.RIVER);

		for (int i = 0; i < width * depth; ++i) {
			if (riverInputs[i] == stream) {
				outputs[i] = riverInputs[i] & 255;
			} else {
				outputs[i] = biomeInputs[i];
			}
		}

		return outputs;
	}
}